{
  "name": "emoji-console-log",
  "displayName": "Emoji Console Log",
  "description": "Inserts console.log() statements with a random emoji",
  "version": "1.1.1",
  "publisher": "sapegin",
  "engines": {
    "vscode": "^1.50.0"
  },
  "icon": "images/icon.png",
  "categories": [
    "Other",
    "Snippets",
    "Testing",
    "Debuggers"
  ],
  "keywords": [
    "console",
    "log",
    "logging",
    "emoji",
    "debugging"
  ],
  "license": "MIT",
  "homepage": "https://github.com/sapegin/emoji-console-log",
  "bugs": {
    "url": "https://github.com/sapegin/emoji-console-log/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sapegin/emoji-console-log"
  },
  "sponsor": {
    "url": "https://www.buymeacoffee.com/sapegin"
  },
  "galleryBanner": {
    "color": "#e9b986"
  },
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Emoji Console Log Configuration",
      "properties": {
        "emojiConsoleLog.logFunction": {
          "type": "string",
          "default": "console.log",
          "description": "Function to log the values."
        }
      }
    },
    "commands": [
      {
        "command": "emojiConsoleLog.addLogMessage",
        "title": "Emoji Console Log: Add log message"
      },
      {
        "command": "emojiConsoleLog.commentAllLogMessages",
        "title": "Emoji Console Log: Comment all log messages"
      },
      {
        "command": "emojiConsoleLog.uncommentAllLogMessages",
        "title": "Emoji Console Log: Uncomment all log messages"
      },
      {
        "command": "emojiConsoleLog.removeAllLogMessages",
        "title": "Emoji Console Log: Delete all log messages"
      }
    ],
    "keybindings": [
      {
        "command": "emojiConsoleLog.addLogMessage",
        "key": "shift+alt+l",
        "mac": "shift+alt+l"
      },
      {
        "command": "emojiConsoleLog.commentAllLogMessages",
        "key": "shift+alt+c",
        "mac": "shift+alt+c"
      },
      {
        "command": "emojiConsoleLog.uncommentAllLogMessages",
        "key": "shift+alt+u",
        "mac": "shift+alt+u"
      },
      {
        "command": "emojiConsoleLog.removeAllLogMessages",
        "key": "shift+alt+d",
        "mac": "shift+alt+d"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "rm -rf out && npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "watch": "npm run esbuild-watch",
    "lint": "eslint . --ext .js,.ts,.tsx --cache --fix",
    "format": "prettier --log-level warn --write \"**/*.{js,ts,tsx,md}\"",
    "pretest": "npm run esbuild-base",
    "test-compile": "rm -rf out && tsc -p ./ && mkdir out/test/files && cp -r src/test/files/ out/test/files/",
    "test": "npm run test-compile && node ./out/test/runTests.js",
    "test:unit": "mocha --require ts-node/register 'src/test/unit/**/*.test.ts'",
    "publish": "vsce publish",
    "prepare": "husky"
  },
  "dependencies": {
    "find-up": "^7.0.0",
    "lodash": "^4.17.21"
  },
  "devDependencies": {
    "@types/chai": "^4.3.14",
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.186",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^7.4.0",
    "@typescript-eslint/parser": "^7.4.0",
    "@vscode/vsce": "^2.9.1",
    "chai": "^4.3.7",
    "chalk": "^4.1.0",
    "esbuild": "^0.20.2",
    "eslint": "^8.57.0",
    "eslint-config-tamia": "^8.1.3",
    "glob": "^7.1.6",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "mocha": "^8.1.3",
    "prettier": "^3.2.5",
    "ts-node": "^10.9.1",
    "typescript": "^5.4.5",
    "vscode-test": "^1.4.0"
  },
  "lint-staged": {
    "*.{js,ts,tsx,md}": "prettier --write",
    "*.{js,ts,tsx}": "eslint --cache --fix"
  }
}
